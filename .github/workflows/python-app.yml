name: Postman

on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        default: "latest"
        description: "Postman Version, accepted values: ['latest', 'version/8.x.x', 'version/9.x.x']"
        required: true
  

env:
  FORCE_COLOR : 'true' # Force colors in console output
  VERSION: "latest" # to use custom postman version change this line into:
                    # VERSION: "version/x.x.x"
                    # example: VERSION: "version/8.9.1"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix: 
        include:
          - os_name: 'Linux x86_64'
            os_type:  'linux64'
            extract_cmd: 'tar -xf'
            extension: '.tar.gz'
    
    name: "Fix Postman Scratchpad - ${{ matrix.os_name }}"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      
      - name : "Install aria2 downloader" 
        run: sudo apt update && sudo apt install aria2
      
      - name : "Install rename utility" 
        run: sudo apt update && sudo apt install rename

      - name : "Configure VERSION Environment Variable" 
        run: |
          input_version="${{ github.event.inputs.version }}"
          if [[ ! -z $input_version ]]; then
            echo "Determined version from user input: $input_version"
            echo "VERSION=${input_version}" >> $GITHUB_ENV
          fi
      - name : "Download & Extract Postman " 
        run: |
          wget --content-disposition -q "https://dl.pstmn.io/download/${{ env.VERSION }}/${{ matrix.os_type }}"
          rename --verbose 'y/A-Z/a-z/' Postman* # Rename to lowercase
          ${{ matrix.extract_cmd }} postman*
          rename --verbose 'y/A-Z/a-z/' Postman* # Rename to lowercase
          
      - name : "Get Postman Version" 
        run: |
          ext=${{ matrix.extension }}
          file=$(ls postman*${ext})
          version=$(python3 -c "import re; print(re.match(r'postman.*(([0-9]+\.){2}[0-9]+).*${ext}', '${file}').group(1))")
          echo "Postman Version = ${version}"
          echo "VERSION=${version}" >> $GITHUB_ENV
          rm -v "${file}"


      - name: Release Files
        uses: softprops/action-gh-release@v1
        with:
          name: "postman v${{ env.VERSION }} scratchpad.js"
          body_path: checksum
          tag_name: ${{ env.VERSION }}
          files: | 
            postman/app/resources/app/js/scratchpad/scratchpad.js
            postman/app/resources/app/js/scratchpad/requester-legacy.js
            postman/app/resources/app/js/requester.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
