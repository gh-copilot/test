name: CI

on:
  push:
    branches: [ test ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  FORCE_COLOR : 'true' # Force colors in console output
  CI: 'true'
  TERM: 'xterm-256color'
  TESTSET: 'arab' # or ytfaces

jobs:
  prepare_arab_dataset:
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Arab dataset
        if: ${{ env.TESTSET == 'arab' }}
        uses: robinraju/release-downloader@v1.3
        with:
          repository: "${{ github.repository }}"
          tag: "testset_numpy_v1.0"
          fileName: "*"
          tarBall: false
          zipBall: false
          out-file-path: "testset"
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Arab dataset
        if: ${{ env.TESTSET == 'arab' }}
        run: |
          cd testset
          rm -v testset_complete.7z || echo ""
          
          for file in *.7z; do
            7z x "$file"
            rm "$file"
          done
      
      - name: Compress whole Arab dataset
        if: ${{ env.TESTSET == 'arab' }}
        run: 7z a testset_complete.7z testset

      - name: Release Files
        if: ${{ env.TESTSET == 'arab' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "testset_numpy_v1.0"
          name: "Testset Numpy"
          files: "testset_complete.7z"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Test:
    needs: [prepare_arab_dataset]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        model: 
          - 'FACES_48x48_n=50.model'
          - 'FEI_48x48_n=50.model'
          - 'FEI_frontal_48x48_n=50.model'
          - 'mug_48x48_n=50.model'
          - 'pca_n=50_affectnet.sav'
          - 'pca_n=50_celebreties.sav'
          - 'pca_n=50_fairface.sav'
          - 'pca_n=50_ffhq.sav'
          - 'pca_n=50_yaleB.sav'
          
          - 'FACES_48x48_n=100.model'
          - 'FEI_48x48_n=100.model'
          - 'FEI_frontal_48x48_n=100.model'
          - 'mug_48x48_n=100.model'
          - 'pca_n=100_affectnet.sav'
          - 'pca_n=100_celebreties.sav'
          - 'pca_n=100_fairface.sav'
          - 'pca_n=100_ffhq.sav'
          - 'pca_n=100_yaleB.sav'
          - 'pca_n=200_yaleB.sav'
          - 'pca_n=400_yaleB.sav'
        
        faces:
          - "2 3 4 5"
        conflict_solver:
          - "true"
          - "false"


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      
      - run: conda update -n base -c defaults conda
      - run: conda install -c conda-forge dlib opencv numpy scikit-learn ipython -y
      - run: conda list
      
      - run: tar -xvf models.tar.xz --skip-old-files
      
      - name: Extract ytfaces dataset
        if: ${{ env.TESTSET == 'ytfaces' }}
        run: |
          tar -xf ytfaces_test_numpy.tar.xz --skip-old-files
          mv ytfaces_test_numpy testset

      - name: Download Arab dataset
        if: ${{ env.TESTSET == 'arab' }}
        uses: robinraju/release-downloader@v1.3
        with:
          repository: "${{ github.repository }}"
          tag: "testset_numpy_v1.0"
          fileName: "testset_complete.7z"
          tarBall: false
          zipBall: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract arab dataset
        if: ${{ env.TESTSET == 'arab' }}
        run: 7z x testset_complete.7z

      - name: List testset files
        run: ls -lRh testset
        continue-on-error: true
        if: always()

      - name: "Run With Conflict Solver"
        if: ${{ matrix.conflict_solver == 'true' }}
        continue-on-error: true
        run: |
          echo "Conflict Resolution: True"
          echo ""

          IFS=', ' read -r -a faces <<< "${{ matrix.faces }}"
          for face in "${faces[@]}" ; do

            python3 -u test_accuracy.py "$PWD/testset" --load-numpy -n "$face" -c --model ${{ matrix.model }} -k 3 5 7 | tee -a "${{ matrix.model }}_faces=${face}_result_with_conflict_solver.txt"
            
            echo ""
            echo ""
          done
      
      - name: "Run Without Conflict Solver"
        if: ${{ matrix.conflict_solver == 'false' }}
        continue-on-error: true
        run: |
          echo "Conflict Resolution: False"
          echo ""
          IFS=', ' read -r -a faces <<< "${{ matrix.faces }}"
          for face in "${faces[@]}" ; do

            python3 -u test_accuracy.py "$PWD/testset" --load-numpy -n "$face" --model ${{ matrix.model }} -k 3 5 7 | tee -a "${{ matrix.model }}_faces=${face}_result.txt"
            
            echo ""
            echo ""
          done

      - run: ls -lh
        continue-on-error: true
        if: always()
      
      - name: Release Files
        if: always()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "models_${{ env.TESTSET }}_v1.1"
          name: "Models Test on ${{ env.TESTSET }} data"
          files: ./*.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
